{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/newowner/Desktop/Project3/frontend/src/components/profile/DeveloperTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { API } from \"../ops/API\";\nimport Moment from 'react-moment';\nimport '../../App.css';\nimport UpdateProject from './UpdateProject';\nexport default function DeveloperTable(props) {\n  _s();\n\n  var _props$profile2;\n\n  const [projects, updateProject] = useState([]); // eslint-disable-next-line\n\n  useEffect(() => {\n    var _props$profile, _props$profile$projec;\n\n    let result = (_props$profile = props.profile) === null || _props$profile === void 0 ? void 0 : (_props$profile$projec = _props$profile.projects) === null || _props$profile$projec === void 0 ? void 0 : _props$profile$projec.map(function (project, i) {\n      let projectObject = Object.assign({}, project);\n\n      let projectDate = /*#__PURE__*/_jsxDEV(Moment, {\n        fromNow: true,\n        children: new Date(projectObject.date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this);\n\n      projectObject.delete = /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        onClick: async () => {\n          console.log(\"Delete Project: \", project.title);\n          await API.deleteProject(project._id).then(res => console.log(res));\n          await props.status();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 30\n      }, this);\n      projectObject.edit = /*#__PURE__*/_jsxDEV(UpdateProject, {\n        project: project,\n        status: props.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 28\n      }, this);\n      projectObject.key = i + 1;\n      projectObject.isVisible = projectObject.isVisible === \"true\"; // Change From String To Boolen\n\n      projectObject.isVisible = projectObject.isVisible ? \"Public\" : \"Private\"; // Change True/False To Public/Private\n\n      projectObject.date = projectDate;\n      return projectObject;\n    });\n    updateProject(result);\n  }, [props.profile]);\n  const columns = [{\n    title: '#',\n    dataIndex: 'key',\n    defaultSortOrder: 'descends'\n  }, {\n    title: 'Project Title',\n    dataIndex: 'title'\n  }, {\n    title: 'Description',\n    dataIndex: 'description'\n  }, {\n    title: 'Technologies',\n    dataIndex: 'technology'\n  }, {\n    title: 'Start Date',\n    dataIndex: 'date'\n  }, {\n    title: 'Visible',\n    dataIndex: 'isVisible'\n  }, {\n    title: 'Licence',\n    dataIndex: 'licence'\n  }, {\n    title: \"Update\",\n    dataIndex: 'edit'\n  }, {\n    title: \"Delete\",\n    dataIndex: 'delete'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns // sortDirections={['descend', 'ascend']}\n      // expandable={{\n      //   expandedRowRender: record => <p style={{ margin: 0 }}>{record.Description}</p>,\n      //   rowExpandable: record => record.name !== 'Not Expandable',\n      // }}\n      ,\n      dataSource: ((_props$profile2 = props.profile) === null || _props$profile2 === void 0 ? void 0 : _props$profile2.projects) ? projects : []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeveloperTable, \"4LmnT2i5+gCF2h3Rbkn5mBGN2lc=\");\n\n_c = DeveloperTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeveloperTable\");","map":{"version":3,"sources":["/Users/newowner/Desktop/Project3/frontend/src/components/profile/DeveloperTable.jsx"],"names":["React","useState","useEffect","Table","DeleteOutlined","API","Moment","UpdateProject","DeveloperTable","props","projects","updateProject","result","profile","map","project","i","projectObject","Object","assign","projectDate","Date","date","delete","console","log","title","deleteProject","_id","then","res","status","edit","key","isVisible","columns","dataIndex","defaultSortOrder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons'\nimport { API } from \"../ops/API\"\nimport Moment from 'react-moment'\nimport '../../App.css'\nimport UpdateProject from './UpdateProject';\nexport default function DeveloperTable(props) {\n  const [projects, updateProject] = useState([])\n\n  // eslint-disable-next-line\n  useEffect(() => {\n    let result = props.profile?.projects?.map(function (project, i) {\n      let projectObject = Object.assign({}, project);\n      let projectDate = <Moment fromNow>{new Date(projectObject.date)}</Moment>\n      projectObject.delete = <DeleteOutlined onClick={async () => {\n        console.log(\"Delete Project: \", project.title)\n        await API.deleteProject(project._id)\n          .then((res) => console.log(res))\n        await props.status()\n      }} />;\n      projectObject.edit = <UpdateProject project={project} status={props.status} />\n      projectObject.key = i + 1\n      projectObject.isVisible = projectObject.isVisible === \"true\" // Change From String To Boolen\n      projectObject.isVisible = projectObject.isVisible ? \"Public\" : \"Private\" // Change True/False To Public/Private\n      projectObject.date = projectDate\n      return projectObject;\n    })\n    updateProject(result)\n\n  }, [props.profile])\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'key',\n      defaultSortOrder: 'descends',\n    },\n    {\n      title: 'Project Title',\n      dataIndex: 'title',\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n    },\n    {\n      title: 'Technologies',\n      dataIndex: 'technology',\n    },\n    {\n      title: 'Start Date',\n      dataIndex: 'date',\n    },\n    {\n      title: 'Visible',\n      dataIndex: 'isVisible',\n    },\n    {\n      title: 'Licence',\n      dataIndex: 'licence',\n    },\n    {\n      title: \"Update\",\n      dataIndex: 'edit',\n    },\n    {\n      title: \"Delete\",\n      dataIndex: 'delete',\n    },\n  ];\n\n  return (\n    <div>\n      <br />\n\n      <Table\n        columns={columns}\n        // sortDirections={['descend', 'ascend']}\n        // expandable={{\n        //   expandedRowRender: record => <p style={{ margin: 0 }}>{record.Description}</p>,\n        //   rowExpandable: record => record.name !== 'Not Expandable',\n        // }}\n        dataSource={props.profile?.projects ? projects : []}\n      />\n    </div>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}