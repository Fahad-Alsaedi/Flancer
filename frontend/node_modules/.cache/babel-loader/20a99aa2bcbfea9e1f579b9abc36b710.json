{"ast":null,"code":"// -m \"Adopt Register POST In Client App\"\nimport axios from 'axios';\nconst API_URI = 'http://localhost:3000';\nexport const getAllUsers = () => {\n  axios.get(`${API_URI}/api/find`).then(response => {\n    console.log(\"RESPONSE: \", response);\n    console.log(\"DATA: \", response.data);\n  }).catch(err => {\n    console.log(\"ERR: \", err);\n  });\n};\nexport const API = {\n  register: async newUserInfo => {\n    let message;\n    await axios.post(`${API_URI}/api/register`, newUserInfo).then(response => {\n      message = response.data.message;\n    }).catch(err => {\n      message = err.split(':')[1];\n    });\n    return message;\n  },\n  updateProfile: async (userID, updates) => {\n    let profile;\n    axios.defaults.withCredentials = true;\n    await axios.put(`${API_URI}/api/user/${userID}`, updates).then(res => {\n      profile = res;\n    });\n    return profile;\n  },\n  checkStatus: async () => {\n    let profile;\n    axios.defaults.withCredentials = true;\n    await axios.get(`${API_URI}/api`).then(res => {\n      profile = res;\n    });\n    return profile;\n  },\n  login: async credential => {\n    axios.defaults.withCredentials = true;\n    const request = axios.post(`${API_URI}/api/auth/login`, {\n      username: credential.username,\n      password: credential.password,\n      withCredentials: true,\n      headers: {\n        crossDomain: true,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response).catch(err => \"Authentication failed\");\n    return {\n      type: 'USER_LOGIN',\n      payload: request\n    };\n  },\n  logout: () => {\n    axios.get(`${API_URI}/api/auth/logout`).then(response => {\n      console.log('RESPONSE: ', response);\n    }).catch(err => console.log(err));\n  },\n  createProject: async projectDetails => {\n    axios.defaults.withCredentials = true;\n    await axios.post(`${API_URI}/api/user/createProject`, projectDetails).then(result => result).catch(err => err);\n  },\n  readProject: async projectID => {\n    axios.defaults.withCredentials = true;\n    await axios.get(`${API_URI}/api/user/project?id=${projectID}`).then(result => result).catch(err => err);\n  },\n  updateProject: async (updates, projectID) => {\n    let project;\n    axios.defaults.withCredentials = true;\n    await axios.put(`${API_URI}/api/user/project/${projectID}`, updates).then(result => project = result).catch(err => err);\n    return project;\n  },\n  deleteProject: async projectID => {\n    let project;\n    axios.defaults.withCredentials = true;\n    await axios.delete(`${API_URI}/api/user/project/${projectID}`).then(result => project = result).catch(err => err);\n    return project;\n  },\n  postContact: async values => {\n    let message;\n    await axios.post(`${API_URI}/contact`, values).then(response => {\n      message = response.data;\n    }).catch(err => {\n      console.log(\"ERR: \", err);\n    });\n    return message;\n  },\n  getProfileGH: async userName => {\n    let profile;\n    await axios.get(`${API_URI}/api/github/`).then(result => profile = result).catch(err => {\n      console.log(\"GITHUB ERR:\", err);\n    });\n    return profile;\n  }\n};","map":{"version":3,"sources":["/Users/newowner/Desktop/Project3/frontend/src/components/ops/API.jsx"],"names":["axios","API_URI","getAllUsers","get","then","response","console","log","data","catch","err","API","register","newUserInfo","message","post","split","updateProfile","userID","updates","profile","defaults","withCredentials","put","res","checkStatus","login","credential","request","username","password","headers","crossDomain","type","payload","logout","createProject","projectDetails","result","readProject","projectID","updateProject","project","deleteProject","delete","postContact","values","getProfileGH","userName"],"mappings":"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","sourcesContent":["// -m \"Adopt Register POST In Client App\"\n\nimport axios from 'axios'\nconst API_URI = 'http://localhost:3000'\n\nexport const getAllUsers = () => {\n  axios\n    .get(`${API_URI}/api/find`)\n    .then((response) => {\n      console.log(\"RESPONSE: \", response);\n      console.log(\"DATA: \", response.data);\n    })\n    .catch((err) => {\n      console.log(\"ERR: \", err);\n    });\n};\n\nexport const API = {\n  register: async (newUserInfo) => {\n    let message\n    await axios\n      .post(`${API_URI}/api/register`, newUserInfo)\n      .then((response) => {\n        message = response.data.message\n      })\n      .catch((err) => {\n        message = err.split(':')[1]\n      });\n    return message\n  }\n  , updateProfile: async (userID, updates) => {\n    let profile\n    axios.defaults.withCredentials = true\n    await axios.put(`${API_URI}/api/user/${userID}`, updates)\n      .then((res) => {\n        profile = res\n      })\n    return profile\n  },\n  checkStatus: async () => {\n    let profile;\n    axios.defaults.withCredentials = true\n    await axios.get(`${API_URI}/api`)\n      .then((res) => {\n        profile = res\n      })\n    return profile\n  },\n  login: async (credential) => {\n    axios.defaults.withCredentials = true\n    const request = axios\n      .post(`${API_URI}/api/auth/login`, {\n        username: credential.username,\n        password: credential.password,\n        withCredentials: true,\n        headers: { crossDomain: true, 'Content-Type': 'application/json' },\n      })\n      .then(response => response)\n      .catch((err) => \"Authentication failed\")\n\n    return {\n      type: 'USER_LOGIN',\n      payload: request,\n    };\n  },\n  logout: () => {\n    axios\n      .get(`${API_URI}/api/auth/logout`)\n      .then((response) => {\n        console.log('RESPONSE: ', response);\n      })\n      .catch((err) => console.log(err))\n  },\n  createProject: async (projectDetails) => {\n    axios.defaults.withCredentials = true\n    await axios\n      .post(`${API_URI}/api/user/createProject`, projectDetails)\n      .then((result) => result)\n      .catch((err) => err)\n  },\n  readProject: async (projectID) => {\n    axios.defaults.withCredentials = true\n    await axios\n      .get(`${API_URI}/api/user/project?id=${projectID}`)\n      .then((result) => result)\n      .catch((err) => err)\n  },\n  updateProject: async (updates, projectID) => {\n    let project\n    axios.defaults.withCredentials = true\n    await axios\n      .put(`${API_URI}/api/user/project/${projectID}`, updates)\n      .then((result) => project = result)\n      .catch((err) => err)\n    return project\n  },\n  deleteProject: async (projectID) => {\n    let project\n    axios.defaults.withCredentials = true\n    await axios\n      .delete(`${API_URI}/api/user/project/${projectID}`)\n      .then((result) => project = result)\n      .catch((err) => err)\n    return project\n  },\n  postContact: async (values) => {\n    let message\n    await axios.post(`${API_URI}/contact`,\n      values)\n      .then((response) => {\n        message = response.data\n      })\n      .catch((err) => {\n        console.log(\"ERR: \", err);\n      });\n      return message\n  },\n  getProfileGH: async (userName) => {\n    let profile\n    await axios\n      .get(`${API_URI}/api/github/`)\n      .then((result) => profile = result)\n      .catch((err) => {\n        console.log(\"GITHUB ERR:\", err)\n      })\n    return profile\n  }\n}"]},"metadata":{},"sourceType":"module"}