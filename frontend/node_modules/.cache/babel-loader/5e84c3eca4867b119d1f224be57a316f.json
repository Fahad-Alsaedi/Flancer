{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/newowner/Desktop/Project3/frontend/src/components/profile/UpdateProject.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Switch, DatePicker, Modal, Button, Col } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { updateProject } from \"../ops/API\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst UpdateProjectCollection = ({\n  visible,\n  updateProject,\n  onCancel,\n  projectVisible,\n  fields\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Update Your Project:\",\n    centered: true,\n    visible: visible,\n    onOk: () => form.validateFields().then(values => {\n      form.resetFields();\n      updateProject(values);\n    }).catch(info => {\n      console.log(\"Validate Failed:\", info);\n    }),\n    okText: \"Update your Project\",\n    onCancel: onCancel,\n    htmlType: \"submit\",\n    children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      form: form,\n      name: \"nest-messages\",\n      onFinish: updateProject // onFinishFailed={onFinishFailed}\n      ,\n      fields: fields,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"title\",\n        label: \"Project Name\",\n        rules: [{\n          required: true,\n          message: \"Project title is required\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"isVisible\",\n        label: \"Visibility\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          onChange: e => projectVisible(e),\n          checkedChildren: \"Public\",\n          unCheckedChildren: \"Private\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"date\",\n        label: \"Start Date\",\n        rules: [{\n          message: \"Start Date of your project required\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"technology\",\n        label: \"Technologies\",\n        rules: [{\n          message: \"Technologies used for your project\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"licence\",\n        label: \"Licence\",\n        rules: [{\n          message: \"Licence used for your project\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"url\",\n        label: \"Website Link\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"image\",\n        label: \"Image URL\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        rules: [{\n          message: \"Project description is required\"\n        }],\n        name: \"description\",\n        label: \"Decription\",\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}; // const onFinish = async (values) => {\n//     if (props.project?._id) {\n//       await UpdateProject(props.project._id, values)\n//         .then((result) => {\n//           form.resetFields();\n//           setStatus(result.data.message);\n//         })\n//         .then(() => {\n//           props.status();\n//           setTimeout(() => setStatus(undefined), 2000);\n//         });\n//     }\n//   };\n//   const onFinishFailed = (errorInfo) => {\n//     console.log(\"Failed:\", errorInfo);\n//   };\n\n\n_s(UpdateProjectCollection, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = UpdateProjectCollection;\n\nfunction UpdateProject(props) {\n  _s2();\n\n  var _props$project, _props$project2, _props$project3, _props$project4, _props$project5;\n\n  console.log((_props$project = props.project) === null || _props$project === void 0 ? void 0 : _props$project._id);\n  const [visible, setVisible] = useState(false);\n  const [projectVisible, setProjectVisible] = useState(true);\n\n  const updateProject = async values => {\n    try {\n      await updateProject(values).then(e => {\n        console.log(\"Project Updated!\");\n      });\n      await props.status();\n    } catch (err) {\n      console.log(err);\n    }\n\n    return setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n      onClick: () => setVisible(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateProjectCollection, {\n      visible: visible,\n      updateProject: updateProject,\n      onCancel: () => setVisible(false),\n      projectVisible: setProjectVisible,\n      fields: [{\n        name: [\"title\"],\n        value: (_props$project2 = props.project) === null || _props$project2 === void 0 ? void 0 : _props$project2.title\n      }, {\n        name: [\"description\"],\n        value: (_props$project3 = props.project) === null || _props$project3 === void 0 ? void 0 : _props$project3.description\n      }, // {name: [\"date\"], value: props.project?.date},\n      {\n        name: [\"licence\"],\n        value: (_props$project4 = props.project) === null || _props$project4 === void 0 ? void 0 : _props$project4.licence\n      }, {\n        name: [\"isVisible\"],\n        checked: (_props$project5 = props.project) === null || _props$project5 === void 0 ? void 0 : _props$project5.isVisible\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UpdateProject, \"6C3kPd07S6fH7027a89P2CbG1UU=\");\n\n_c2 = UpdateProject;\nexport default UpdateProject;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateProjectCollection\");\n$RefreshReg$(_c2, \"UpdateProject\");","map":{"version":3,"sources":["/Users/newowner/Desktop/Project3/frontend/src/components/profile/UpdateProject.jsx"],"names":["React","useState","Form","Input","Switch","DatePicker","Modal","Button","Col","EditOutlined","updateProject","layout","labelCol","span","wrapperCol","UpdateProjectCollection","visible","onCancel","projectVisible","fields","form","useForm","validateFields","then","values","resetFields","catch","info","console","log","required","message","e","UpdateProject","props","project","_id","setVisible","setProjectVisible","status","err","name","value","title","description","licence","checked","isVisible"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Switch, DatePicker, Modal, Button, Col } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nimport { updateProject } from \"../ops/API\";\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst UpdateProjectCollection = ({\n  visible,\n  updateProject,\n  onCancel,\n  projectVisible,\n  fields,\n}) => {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      title=\"Update Your Project:\"\n      centered\n      visible={visible}\n      onOk={() =>\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            updateProject(values);\n          })\n          .catch((info) => {\n            console.log(\"Validate Failed:\", info);\n          })\n      }\n      okText=\"Update your Project\"\n      onCancel={onCancel}\n      htmlType=\"submit\"\n    >\n      <Form\n        {...layout}\n        form={form}\n        name=\"nest-messages\"\n        onFinish={updateProject}\n        // onFinishFailed={onFinishFailed}\n        fields={fields}\n      >\n        <Form.Item\n          name={\"title\"}\n          label=\"Project Name\"\n          rules={[\n            {\n              required: true,\n              message: \"Project title is required\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item name={\"isVisible\"} label=\"Visibility\">\n          <Switch\n            onChange={(e) => projectVisible(e)}\n            checkedChildren=\"Public\"\n            unCheckedChildren=\"Private\"\n           \n          />\n        </Form.Item>\n        <Form.Item\n          name={\"date\"}\n          label=\"Start Date\"\n          rules={[\n            {\n              message: \"Start Date of your project required\",\n            },\n          ]}\n        >\n          <DatePicker />\n        </Form.Item>\n        <Form.Item\n          name={\"technology\"}\n          label=\"Technologies\"\n          rules={[\n            {\n              message: \"Technologies used for your project\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={\"licence\"}\n          label=\"Licence\"\n          rules={[\n            {\n              message: \"Licence used for your project\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item name={\"url\"} label=\"Website Link\">\n          <Input />\n        </Form.Item>\n        <Form.Item name={\"image\"} label=\"Image URL\">\n          <Input />\n        </Form.Item>\n        <Form.Item\n          rules={[\n            {\n              message: \"Project description is required\",\n            },\n          ]}\n          name={\"description\"}\n          label=\"Decription\"\n        >\n          <Input.TextArea />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n// const onFinish = async (values) => {\n//     if (props.project?._id) {\n//       await UpdateProject(props.project._id, values)\n//         .then((result) => {\n//           form.resetFields();\n//           setStatus(result.data.message);\n//         })\n//         .then(() => {\n//           props.status();\n//           setTimeout(() => setStatus(undefined), 2000);\n//         });\n//     }\n//   };\n//   const onFinishFailed = (errorInfo) => {\n//     console.log(\"Failed:\", errorInfo);\n//   };\n\nfunction UpdateProject(props) {\n    console.log(props.project?._id)\n  const [visible, setVisible] = useState(false);\n  const [projectVisible, setProjectVisible] = useState(true);\n  const updateProject = async (values) => {\n    try {\n      await updateProject(values).then((e) => {\n        console.log(\"Project Updated!\");\n      });\n      await props.status();\n    } catch (err) {\n      console.log(err);\n    }\n    return setVisible(false);\n  };\n\n  return (\n    <div>\n      <EditOutlined onClick={() => setVisible(true)} />\n      <UpdateProjectCollection\n        visible={visible}\n        updateProject={updateProject}\n        onCancel={() => setVisible(false)}\n        projectVisible={setProjectVisible}\n        fields={[{name: [\"title\"], value: props.project?.title},\n        {name: [\"description\"], value: props.project?.description},\n        // {name: [\"date\"], value: props.project?.date},\n        {name: [\"licence\"], value: props.project?.licence},\n        {name: [\"isVisible\"], checked: props.project?.isVisible}\n          ]}\n      />\n    </div>\n  );\n}\n\nexport default UpdateProject;\n"]},"metadata":{},"sourceType":"module"}