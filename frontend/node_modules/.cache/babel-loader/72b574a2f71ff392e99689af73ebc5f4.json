{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/newowner/Desktop/Project3/frontend/src/components/profile/DeveloperTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { deleteProject } from \"../ops/API\";\nimport '../../App.css';\nimport UpdateProject from './UpdateProject';\nexport default function DeveloperTable(props) {\n  _s();\n\n  const [projects, updateProject] = useState([]);\n  useEffect(() => {\n    var _props$projects;\n\n    let result = (_props$projects = props.projects) === null || _props$projects === void 0 ? void 0 : _props$projects.map(function (project, i) {\n      let projectObject = Object.assign({}, project);\n      projectObject.delete = /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        onClick: () => {\n          deleteProject(project._id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 30\n      }, this);\n      projectObject.edit = /*#__PURE__*/_jsxDEV(UpdateProject, {\n        project: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 28\n      }, this);\n      projectObject.key = i + 1;\n      projectObject.isVisible = projectObject.isVisible ? \"Public\" : \"Private\";\n      return projectObject;\n    });\n    updateProject(result);\n  }, [props.projects]);\n  const columns = [{\n    title: '#',\n    dataIndex: 'key',\n    defaultSortOrder: 'descends'\n  }, {\n    title: 'Project Title',\n    dataIndex: 'title'\n  }, {\n    title: 'Description',\n    dataIndex: 'description'\n  }, {\n    title: 'Technologies',\n    dataIndex: 'technology'\n  }, {\n    title: 'Start Date',\n    dataIndex: 'date'\n  }, {\n    title: 'Visible',\n    dataIndex: 'isVisible'\n  }, {\n    title: 'Licence',\n    dataIndex: 'licence'\n  }, {\n    title: \"Update\",\n    dataIndex: 'edit'\n  }, {\n    title: \"Delete\",\n    dataIndex: 'delete'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns // sortDirections={['descend', 'ascend']}\n      // expandable={{\n      //   expandedRowRender: record => <p style={{ margin: 0 }}>{record.Description}</p>,\n      //   rowExpandable: record => record.name !== 'Not Expandable',\n      // }}\n      ,\n      dataSource: props.projects ? projects : []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeveloperTable, \"4LmnT2i5+gCF2h3Rbkn5mBGN2lc=\");\n\n_c = DeveloperTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeveloperTable\");","map":{"version":3,"sources":["/Users/newowner/Desktop/Project3/frontend/src/components/profile/DeveloperTable.jsx"],"names":["React","useState","useEffect","Table","EditOutlined","DeleteOutlined","deleteProject","UpdateProject","DeveloperTable","props","projects","updateProject","result","map","project","i","projectObject","Object","assign","delete","_id","edit","key","isVisible","columns","title","dataIndex","defaultSortOrder"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,mBAA7C;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAO,eAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,aAAX,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAIU,MAAM,sBAAGH,KAAK,CAACC,QAAT,oDAAG,gBAAgBG,GAAhB,CAAoB,UAAUC,OAAV,EAAmBC,CAAnB,EAAsB;AACrD,UAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,OAAlB,CAApB;AACAE,MAAAA,aAAa,CAACG,MAAd,gBAAuB,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,MAAI;AAACb,UAAAA,aAAa,CAACQ,OAAO,CAACM,GAAT,CAAb;AAA2B;AAAzD;AAAA;AAAA;AAAA;AAAA,cAAvB;AACAJ,MAAAA,aAAa,CAACK,IAAd,gBAAqB,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEP;AAAxB;AAAA;AAAA;AAAA;AAAA,cAArB;AACAE,MAAAA,aAAa,CAACM,GAAd,GAAoBP,CAAC,GAAG,CAAxB;AACAC,MAAAA,aAAa,CAACO,SAAd,GAA0BP,aAAa,CAACO,SAAd,GAA0B,QAA1B,GAAqC,SAA/D;AACA,aAAOP,aAAP;AACD,KAPY,CAAb;AAQAL,IAAAA,aAAa,CAACC,MAAD,CAAb;AAED,GAXQ,EAWN,CAACH,KAAK,CAACC,QAAP,CAXM,CAAT;AAYA,QAAMc,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,GADT;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,gBAAgB,EAAE;AAHpB,GADc,EAMd;AACEF,IAAAA,KAAK,EAAE,eADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GANc,EAUd;AACED,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAVc,EAcd;AACED,IAAAA,KAAK,EAAE,cADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAdc,EAkBd;AACED,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAlBc,EAsBd;AACED,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAtBc,EA0Bd;AACED,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GA1Bc,EA8Bd;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GA9Bc,EAkCd;AACED,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAlCc,CAAhB;AAwCA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AACE,MAAA,OAAO,EAAEF,OADX,CAEE;AACA;AACA;AACA;AACA;AANF;AAOE,MAAA,UAAU,EAAEf,KAAK,CAACC,QAAN,GAAiBA,QAAjB,GAA4B;AAP1C;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAtEuBF,c;;KAAAA,c","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\nimport { deleteProject } from \"../ops/API\"\nimport '../../App.css'\nimport UpdateProject from './UpdateProject';\nexport default function DeveloperTable(props) {\n  const [projects, updateProject] = useState([])\n  useEffect(() => {\n    let result = props.projects?.map(function (project, i) {\n      let projectObject = Object.assign({}, project);\n      projectObject.delete = <DeleteOutlined onClick={()=>{deleteProject(project._id)}}/>;\n      projectObject.edit = <UpdateProject project={project} />\n      projectObject.key = i + 1\n      projectObject.isVisible = projectObject.isVisible ? \"Public\" : \"Private\"\n      return projectObject;\n    })\n    updateProject(result)\n\n  }, [props.projects])\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'key',\n      defaultSortOrder: 'descends',\n    },\n    {\n      title: 'Project Title',\n      dataIndex: 'title',\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n    },\n    {\n      title: 'Technologies',\n      dataIndex: 'technology',\n    },\n    {\n      title: 'Start Date',\n      dataIndex: 'date',\n    },\n    {\n      title: 'Visible',\n      dataIndex: 'isVisible',\n    },\n    {\n      title: 'Licence',\n      dataIndex: 'licence',\n    },\n    {\n      title: \"Update\",\n      dataIndex: 'edit',\n    },\n    {\n      title: \"Delete\",\n      dataIndex: 'delete',\n    },\n  ];\n\n  return (\n    <div>\n      <br />\n\n      <Table\n        columns={columns}\n        // sortDirections={['descend', 'ascend']}\n        // expandable={{\n        //   expandedRowRender: record => <p style={{ margin: 0 }}>{record.Description}</p>,\n        //   rowExpandable: record => record.name !== 'Not Expandable',\n        // }}\n        dataSource={props.projects ? projects : []}\n      />\n    </div>\n  )\n\n}"]},"metadata":{},"sourceType":"module"}