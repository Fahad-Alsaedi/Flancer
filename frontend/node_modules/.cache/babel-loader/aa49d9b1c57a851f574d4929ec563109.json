{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/newowner/Desktop/Project3/frontend/src/components/profile/ProjectForm.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Switch, DatePicker, Modal, Button, Col } from \"antd\";\nimport { createProject } from \"../ops/API\";\nconst style = {\n  height: 30,\n  width: 120,\n  lineHeight: \"10px\",\n  borderRadius: 4,\n  backgroundColor: \"#006466\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  fontSize: 14,\n  padding: 0\n};\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst ProjectCollection = ({\n  visible,\n  createNewProject,\n  onCancel,\n  projectVisible\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Create New Project:\",\n    centered: true,\n    visible: visible,\n    onOk: () => form.validateFields().then(values => {\n      form.resetFields();\n      createNewProject(values);\n    }).catch(info => {\n      console.log('Validate Failed:', info);\n    }),\n    okText: \"Create New Project\",\n    onCancel: onCancel,\n    htmlType: \"submit\",\n    children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      form: form,\n      name: \"nest-messages\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"title\",\n        label: \"Project Name\",\n        rules: [{\n          required: true,\n          message: \"Project title is required\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"isVisible\",\n        label: \"Visibility\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          onChange: e => projectVisible(e),\n          checkedChildren: \"Public\",\n          unCheckedChildren: \"Private\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"date\",\n        label: \"Start Date\",\n        rules: [{\n          required: true,\n          message: \"Start Date of your project required\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"technology\",\n        label: \"Technologies\",\n        rules: [{\n          message: \"Technologies used for your project\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"licence\",\n        label: \"Licence\",\n        rules: [{\n          message: \"Licence used for your project\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"url\",\n        label: \"Website Link\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"image\",\n        label: \"Image URL\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        rules: [{\n          required: true,\n          message: \"Project description is required\"\n        }],\n        name: \"description\",\n        label: \"Decription\",\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectCollection, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = ProjectCollection;\nexport default function ProjectForm(props) {\n  _s2();\n\n  const [visible, setVisible] = useState(false);\n  const [projectVisible, setProjectVisible] = useState(true);\n\n  const createNewProject = async values => {\n    try {\n      await createProject(values).then(e => {\n        console.log(\"Project Added!\");\n      });\n      await props.status();\n    } catch (err) {\n      console.log(err);\n    }\n\n    return setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      span: 20,\n      style: {\n        top: \"50px\",\n        right: \"45px\",\n        position: \"fixed\",\n        zIndex: \"1\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: style,\n        onClick: () => setVisible(true),\n        children: \"Create Project +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectCollection, {\n      visible: visible,\n      createNewProject: createNewProject,\n      onCancel: () => setVisible(false),\n      projectVisible: setProjectVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(ProjectForm, \"6C3kPd07S6fH7027a89P2CbG1UU=\");\n\n_c2 = ProjectForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectCollection\");\n$RefreshReg$(_c2, \"ProjectForm\");","map":{"version":3,"sources":["/Users/newowner/Desktop/Project3/frontend/src/components/profile/ProjectForm.jsx"],"names":["React","useState","Form","Input","Switch","DatePicker","Modal","Button","Col","createProject","style","height","width","lineHeight","borderRadius","backgroundColor","color","textAlign","fontSize","padding","layout","labelCol","span","wrapperCol","ProjectCollection","visible","createNewProject","onCancel","projectVisible","form","useForm","validateFields","then","values","resetFields","catch","info","console","log","required","message","e","ProjectForm","props","setVisible","setProjectVisible","status","err","top","right","position","zIndex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Switch, DatePicker, Modal, Button, Col } from \"antd\";\nimport { createProject } from \"../ops/API\"\nconst style = {\n  height: 30,\n  width: 120,\n  lineHeight: \"10px\",\n  borderRadius: 4,\n  backgroundColor: \"#006466\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  fontSize: 14,\n  padding: 0,\n};\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst ProjectCollection = ({ visible, createNewProject, onCancel, projectVisible }) => {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      title=\"Create New Project:\"\n      centered\n      visible={visible}\n      onOk={() => form\n        .validateFields()\n        .then((values) => {\n          form.resetFields();\n          createNewProject(values);\n        })\n        .catch((info) => {\n          console.log('Validate Failed:', info);\n        })\n      }\n      okText=\"Create New Project\"\n      onCancel={onCancel}\n      htmlType=\"submit\"\n    >\n      <Form\n        {...layout}\n        form={form}\n        name=\"nest-messages\"\n      >\n        <Form.Item\n          name={\"title\"}\n          label=\"Project Name\"\n          rules={[\n            {\n              required: true,\n              message: \"Project title is required\"\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={\"isVisible\"}\n          label=\"Visibility\">\n          <Switch onChange={(e)=>projectVisible(e)} checkedChildren=\"Public\" unCheckedChildren=\"Private\" defaultChecked />\n        </Form.Item>\n        <Form.Item\n          name={\"date\"}\n          label=\"Start Date\"\n          rules={[\n            {\n              required: true,\n              message: \"Start Date of your project required\"\n            },\n          ]}\n        >\n          <DatePicker />\n        </Form.Item>\n        <Form.Item\n          name={\"technology\"}\n          label=\"Technologies\"\n          rules={[\n            {\n              message: \"Technologies used for your project\"\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={\"licence\"}\n          label=\"Licence\"\n          rules={[\n            {\n              message: \"Licence used for your project\"\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item name={\"url\"} label=\"Website Link\">\n          <Input />\n        </Form.Item>\n        <Form.Item name={\"image\"} label=\"Image URL\">\n          <Input />\n        </Form.Item>\n        <Form.Item\n          rules={[\n            {\n              required: true,\n              message: \"Project description is required\"\n            },\n          ]}\n          name={\"description\"}\n          label=\"Decription\"\n        >\n          <Input.TextArea />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n}\nexport default function ProjectForm(props) {\n  const [visible, setVisible] = useState(false)\n  const [projectVisible, setProjectVisible] = useState(true)\n  const createNewProject = async (values) => {\n    try {\n      await createProject(values).then((e) => { console.log(\"Project Added!\") })\n      await props.status()\n    } catch (err) {\n      console.log(err)\n    }\n    return setVisible(false)\n  }\n  return (\n    <>\n      <Col span={20} style={{\n        top: \"50px\",\n        right: \"45px\",\n        position: \"fixed\",\n        zIndex: \"1\"\n      }}>\n        <Button style={style} onClick={() => setVisible(true)}>\n          Create Project +\n          </Button>\n      </Col>\n      <ProjectCollection\n        visible={visible}\n        createNewProject={createNewProject}\n        onCancel={() => setVisible(false)}\n        projectVisible={setProjectVisible}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}