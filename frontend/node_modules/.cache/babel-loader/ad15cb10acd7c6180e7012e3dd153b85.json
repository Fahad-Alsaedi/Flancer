{"ast":null,"code":"import axios from 'axios';\nconst API = 'http://localhost:3000';\nexport const createProject = async projectDetails => {\n  axios.defaults.withCredentials = true;\n  await axios.post(`${API}/api/user/createProject`, projectDetails).then(result => result).catch(err => err);\n};\nexport const readProject = async projectID => {\n  axios.defaults.withCredentials = true;\n  await axios.get(`${API}/api/user/project?id=${projectID}`).then(result => result).catch(err => err);\n};\nexport const updateProject = async (projectID, updates) => {\n  axios.defaults.withCredentials = true;\n  await axios.put(`${API}/api/user/project?id=${projectID}`, updates).then(result => result).catch(err => err);\n};\nexport const deleteProject = async projectID => {\n  axios.defaults.withCredentials = true;\n  await axios.delete(`${API}/api/user/project?id=${projectID}`).then(result => result).catch(err => err);\n};\nexport const login = async credential => {\n  axios.defaults.withCredentials = true;\n  const request = axios.post(`${API}/api/auth/login`, {\n    username: credential.username,\n    password: credential.password,\n    withCredentials: true,\n    headers: {\n      crossDomain: true,\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response).catch(err => \"Authentication failed\");\n  return {\n    type: 'USER_LOGIN',\n    payload: request\n  };\n};\nexport const logout = () => {\n  axios.get(`${API}/api/auth/logout`).then(response => {\n    console.log('RESPONSE: ', response);\n  }).catch(err => console.log(err));\n};\nexport const checkStatus = async () => {\n  let profile;\n  axios.defaults.withCredentials = true;\n  await axios.get(`${API}/api`).then(res => {\n    profile = res;\n  });\n  return profile;\n};\nexport const updateProfile = async (userID, updates) => {\n  let profile;\n  axios.defaults.withCredentials = true;\n  await axios.put(`${API}/api/user/${userID}`, updates).then(res => {\n    profile = res;\n  });\n  return profile;\n}; //this axios for get all the users from the server\n\nexport const getAllUsers = () => {\n  axios.get(`${API}/api/find`).then(response => {\n    console.log(\"RESPONSE: \", response);\n    console.log(\"DATA: \", response.data);\n  }).catch(err => {\n    console.log(\"ERR: \", err);\n  });\n}; //this for new user\n\nexport const register = (newUserInfo = {\n  username: \"demo\",\n  password: \"demo\"\n}) => {\n  console.log('send API POST ');\n  axios.post(`${API}/api/register`, newUserInfo).then(response => {\n    console.log('RESPONSE: ', response);\n    console.log('DATA: ', response.data); // HERE IS YOUR LOGIC\n  }).catch(err => {\n    console.log('ERR: ', err);\n  });\n};","map":{"version":3,"sources":["/Users/newowner/Desktop/Project3/frontend/src/components/ops/API.jsx"],"names":["axios","API","createProject","projectDetails","defaults","withCredentials","post","then","result","catch","err","readProject","projectID","get","updateProject","updates","put","deleteProject","delete","login","credential","request","username","password","headers","crossDomain","response","type","payload","logout","console","log","checkStatus","profile","res","updateProfile","userID","getAllUsers","data","register","newUserInfo"],"mappings":"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","sourcesContent":["import axios from 'axios'\nconst API = 'http://localhost:3000'\nexport const createProject = async (projectDetails) => {\n  axios.defaults.withCredentials = true\n  await axios\n    .post(`${API}/api/user/createProject`, projectDetails)\n    .then((result) => result)\n    .catch((err) => err)\n}\n\nexport const readProject = async (projectID) => {\n  axios.defaults.withCredentials = true\n  await axios\n    .get(`${API}/api/user/project?id=${projectID}`)\n    .then((result) => result)\n    .catch((err) => err)\n}\n\nexport const updateProject = async (projectID, updates) => {\n  axios.defaults.withCredentials = true\n  await axios\n    .put(`${API}/api/user/project?id=${projectID}`, updates)\n    .then((result) => result)\n    .catch((err) => err)\n}\n\nexport const deleteProject = async (projectID) => {\n  axios.defaults.withCredentials = true\n  await axios\n    .delete(`${API}/api/user/project?id=${projectID}`)\n    .then((result) => result)\n    .catch((err) => err)\n}\n\nexport const login = async (credential) => {\n  axios.defaults.withCredentials = true\n  const request = axios\n    .post(`${API}/api/auth/login`, {\n      username: credential.username,\n      password: credential.password,\n      withCredentials: true,\n      headers: { crossDomain: true, 'Content-Type': 'application/json' },\n    })\n    .then(response => response)\n    .catch((err) => \"Authentication failed\")\n\n  return {\n    type: 'USER_LOGIN',\n    payload: request,\n  };\n}\n\n\nexport const logout = () => {\n  axios\n    .get(`${API}/api/auth/logout`)\n    .then((response) => {\n      console.log('RESPONSE: ', response);\n    })\n    .catch((err) => console.log(err))\n}\n\n\nexport const checkStatus = async () => {\n  let profile;\n  axios.defaults.withCredentials = true\n  await axios.get(`${API}/api`)\n    .then((res) => {\n      profile = res\n    })\n  return profile\n}\n\nexport const updateProfile = async (userID, updates) => {\n  let profile\n  axios.defaults.withCredentials = true\n  await axios.put(`${API}/api/user/${userID}`, updates)\n    .then((res) => {\n      profile = res\n    })\n  return profile\n}\n\n//this axios for get all the users from the server\nexport const getAllUsers = () => {\n  axios\n    .get(`${API}/api/find`)\n    .then((response) => {\n      console.log(\"RESPONSE: \", response);\n      console.log(\"DATA: \", response.data);\n    })\n    .catch((err) => {\n      console.log(\"ERR: \", err);\n    });\n};\n\n//this for new user\nexport const register = (newUserInfo = { username: \"demo\", password: \"demo\" }) => {\n  console.log('send API POST ');\n  axios\n    .post(`${API}/api/register`, newUserInfo)\n    .then((response) => {\n      console.log('RESPONSE: ', response);\n      console.log('DATA: ', response.data);\n      // HERE IS YOUR LOGIC\n\n    })\n    .catch((err) => {\n      console.log('ERR: ', err);\n    });\n};"]},"metadata":{},"sourceType":"module"}