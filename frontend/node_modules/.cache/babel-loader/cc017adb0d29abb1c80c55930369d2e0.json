{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/newowner/Desktop/Project3/frontend/src/components/profile/UpdateProject.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Switch, DatePicker, Modal } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from 'moment';\nimport { API } from \"../ops/API\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst UpdateProjectCollection = ({\n  visible,\n  updateCurrentProject,\n  onCancel,\n  setProjectVisible,\n  projectVisible,\n  currentProjectVisible,\n  fields\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Update Your Project:\",\n    centered: true,\n    visible: visible,\n    onOk: () => form.validateFields().then(values => {\n      form.resetFields();\n      updateCurrentProject(values);\n    }).catch(info => {\n      console.log(\"Validate Failed:\", info);\n    }),\n    okText: \"Update your Project\",\n    onCancel: onCancel,\n    htmlType: \"submit\",\n    children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      form: form,\n      name: \"nest-messages\",\n      onFinish: API.updateProject // onFinishFailed={onFinishFailed}\n      ,\n      fields: fields,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"title\",\n        label: \"Project Name\",\n        rules: [{\n          required: true,\n          message: \"Project title is required\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"isVisible\",\n        label: \"Visibility\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          onClick: e => setProjectVisible(!projectVisible),\n          checkedChildren: \"Public\",\n          unCheckedChildren: \"Private\",\n          checked: currentProjectVisible\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"date\",\n        label: \"Start Date\",\n        format: 'YYYY-MM-DD',\n        rules: [{\n          required: false,\n          message: \"Start Date of your project required\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"technology\",\n        label: \"Technologies\",\n        rules: [{\n          message: \"Technologies used for your project\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"licence\",\n        label: \"Licence\",\n        rules: [{\n          message: \"Licence used for your project\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"url\",\n        label: \"Website Link\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"image\",\n        label: \"Image URL\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        rules: [{\n          message: \"Project description is required\"\n        }],\n        name: \"description\",\n        label: \"Decription\",\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateProjectCollection, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = UpdateProjectCollection;\n\nfunction UpdateProject(props) {\n  _s2();\n\n  var _props$project, _props$project2, _props$project3, _props$project4, _props$project5, _props$project6, _props$project7, _props$project8, _props$project9;\n\n  const [visible, setVisible] = useState(false);\n  let currentProjectState = ((_props$project = props.project) === null || _props$project === void 0 ? void 0 : _props$project.isVisible) === \"true\";\n  const [projectVisible, setProjectVisible] = useState(currentProjectState);\n\n  const updateCurrentProject = async (values, projectID = props.project._id) => {\n    try {\n      await API.updateProject(values, projectID).then(e => {\n        console.log(\"Project Updated!\", values);\n      });\n      await props.status();\n    } catch (err) {\n      console.log(err);\n    }\n\n    return setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(EditOutlined, {\n      onClick: () => setVisible(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateProjectCollection, {\n      visible: visible,\n      updateCurrentProject: updateCurrentProject,\n      onCancel: () => setVisible(false),\n      setProjectVisible: setProjectVisible,\n      projectVisible: currentProjectState,\n      currentProjectVisible: projectVisible,\n      fields: [{\n        name: [\"title\"],\n        value: (_props$project2 = props.project) === null || _props$project2 === void 0 ? void 0 : _props$project2.title\n      }, {\n        name: [\"date\"],\n        value: moment((_props$project3 = props.project) === null || _props$project3 === void 0 ? void 0 : _props$project3.date)\n      }, {\n        name: [\"technology\"],\n        value: (_props$project4 = props.project) === null || _props$project4 === void 0 ? void 0 : _props$project4.technology\n      }, {\n        name: [\"licence\"],\n        value: (_props$project5 = props.project) === null || _props$project5 === void 0 ? void 0 : _props$project5.licence\n      }, // {name: ['isVisible'], checked: projectVisible},\n      {\n        name: [\"url\"],\n        value: (_props$project6 = props.project) === null || _props$project6 === void 0 ? void 0 : _props$project6.url\n      }, {\n        name: [\"image\"],\n        value: (_props$project7 = props.project) === null || _props$project7 === void 0 ? void 0 : _props$project7.image\n      }, {\n        name: [\"description\"],\n        value: (_props$project8 = props.project) === null || _props$project8 === void 0 ? void 0 : _props$project8.description\n      }],\n      projectID: (_props$project9 = props.project) === null || _props$project9 === void 0 ? void 0 : _props$project9._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UpdateProject, \"kI/rSzLB0Ff4AEFfLYHkciW0bcQ=\");\n\n_c2 = UpdateProject;\nexport default UpdateProject;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateProjectCollection\");\n$RefreshReg$(_c2, \"UpdateProject\");","map":{"version":3,"sources":["/Users/newowner/Desktop/Project3/frontend/src/components/profile/UpdateProject.jsx"],"names":["React","useState","Form","Input","Switch","DatePicker","Modal","EditOutlined","moment","API","layout","labelCol","span","wrapperCol","UpdateProjectCollection","visible","updateCurrentProject","onCancel","setProjectVisible","projectVisible","currentProjectVisible","fields","form","useForm","validateFields","then","values","resetFields","catch","info","console","log","updateProject","required","message","e","UpdateProject","props","setVisible","currentProjectState","project","isVisible","projectID","_id","status","err","name","value","title","date","technology","licence","url","image","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Input, Switch, DatePicker, Modal } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from 'moment';\n\nimport { API } from \"../ops/API\";\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst UpdateProjectCollection = ({\n  visible,\n  updateCurrentProject,\n  onCancel,\n  setProjectVisible,\n  projectVisible,\n  currentProjectVisible,\n  fields,\n}) => {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      title=\"Update Your Project:\"\n      centered\n      visible={visible}\n      onOk={() =>\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            updateCurrentProject(values);\n          })\n          .catch((info) => {\n            console.log(\"Validate Failed:\", info);\n          })\n      }\n      okText=\"Update your Project\"\n      onCancel={onCancel}\n      htmlType=\"submit\"\n    >\n      <Form\n        {...layout}\n        form={form}\n        name=\"nest-messages\"\n        onFinish={API.updateProject}\n        // onFinishFailed={onFinishFailed}\n        fields={fields}\n      >\n        <Form.Item\n          name={\"title\"}\n          label=\"Project Name\"\n          rules={[\n            {\n              required: true,\n              message: \"Project title is required\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item name={\"isVisible\"} label=\"Visibility\">\n          <Switch\n            onClick = {(e)=> setProjectVisible(!projectVisible)}\n            checkedChildren=\"Public\"\n            unCheckedChildren=\"Private\"\n            checked={currentProjectVisible}\n          />\n        </Form.Item>\n        <Form.Item\n          name={\"date\"}\n          label=\"Start Date\"\n          format={'YYYY-MM-DD'}\n          rules={[\n            {\n              required: false,\n              message: \"Start Date of your project required\",\n            },\n          ]}\n        >\n          <DatePicker />\n        </Form.Item>\n        <Form.Item\n          name={\"technology\"}\n          label=\"Technologies\"\n          rules={[\n            {\n              message: \"Technologies used for your project\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name={\"licence\"}\n          label=\"Licence\"\n          rules={[\n            {\n              message: \"Licence used for your project\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item name={\"url\"} label=\"Website Link\">\n          <Input />\n        </Form.Item>\n        <Form.Item name={\"image\"} label=\"Image URL\">\n          <Input />\n        </Form.Item>\n        <Form.Item\n          rules={[\n            {\n              message: \"Project description is required\",\n            },\n          ]}\n          name={\"description\"}\n          label=\"Decription\"\n        >\n          <Input.TextArea />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction UpdateProject(props) {\n  const [visible, setVisible] = useState(false);\n  let currentProjectState = props.project?.isVisible === \"true\"\n  const [projectVisible, setProjectVisible] = useState(currentProjectState);\n  const updateCurrentProject = async (values, projectID = props.project._id) => {\n    try {\n      await API.updateProject(values, projectID).then((e) => {\n        console.log(\"Project Updated!\", values);\n      });\n      await props.status();\n    } catch (err) {\n      console.log(err);\n    }\n    return setVisible(false);\n  };\n  return (\n    <div>\n      <EditOutlined onClick={() => setVisible(true)} />\n\n      <UpdateProjectCollection\n        visible={visible}\n        updateCurrentProject={updateCurrentProject}\n        onCancel={() => setVisible(false)}\n        setProjectVisible={setProjectVisible}\n        projectVisible={currentProjectState}\n        currentProjectVisible={projectVisible}\n        fields={[{ name: [\"title\"], value: props.project?.title },\n        { name: [\"date\"], value: moment(props.project?.date) },\n        { name: [\"technology\"], value: props.project?.technology },\n        { name: [\"licence\"], value: props.project?.licence },\n        // {name: ['isVisible'], checked: projectVisible},\n        { name: [\"url\"], value: props.project?.url },\n        { name: [\"image\"], value: props.project?.image },\n        { name: [\"description\"], value: props.project?.description },\n        ]}\n        projectID={props.project?._id}\n      />\n    </div>\n  );\n}\n\nexport default UpdateProject;\n"]},"metadata":{},"sourceType":"module"}